{"version":3,"file":"static/js/550.f2739c98.chunk.js","mappings":"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","sources":["components/CarList/CarItem.jsx/CarItem.jsx","components/CarList/CarList.jsx","redux/carSlice/selectors.js","components/Filter/сhooseModel.js","components/Filter/Filter.jsx","components/CatalogBody/CatalogBody.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import React from 'react';\n\nfunction CarItem({ car }) {\n  const { id, img, brand, model, year, features, description, price } = car;\n\n  //   const dispatch = useDispatch();\n  //   const [isModalOpen, setIsModalOpen] = useState(false);\n\n  //   const switchModel = isOpen => {\n  //     setIsModalOpen(isOpen);\n  //   };\n\n  /* <button type='button' onClick={switchModel(true)}>View more</button>\n          {isModalOpen(true) &&} */\n\n  return (\n    <li key={id}>\n      <img src={img} alt={`${brand} ${model} ${year}`} />\n      <div>\n        {brand}\n        <div>\n          {model} <span>,</span>\n        </div>\n        {year}\n        <div>\n          {description}\n          {features}\n        </div>\n        {price}\n      </div>\n    </li>\n  );\n}\n\nexport default CarItem;\n","import React from 'react';\nimport CarItem from './CarItem.jsx/CarItem';\n\nfunction CarList({ cars }) {\n  return (\n    <ul>\n      {cars.map(car => (car.id ? <CarItem key={car.id} car={car} /> : null))}\n    </ul>\n  );\n}\n\nexport default CarList;\n","export const selectCars = state => state.cars.cars;\nexport const selectFilteredCars = state => state.cars.filteredCars;\nexport const selectFilters = state => state.cars.filter;\nexport const selectIsLoading = state => state.cars.isLoading;\nexport const selectIsFiltered = state => state.cars.isFiltered;\n","export const brands = [\n  'Audi',\n  'Bentley',\n  'BMW',\n  'Ferrari',\n  'Ford',\n  'Jaguar',\n  'Lamborghini',\n  'Lexus',\n  'Maserati',\n  'Maybach',\n  'McLaren',\n  'Mercedes-AMG',\n  'Mercedes-Benz',\n  'Mercedes-Maybach',\n  'Nissan',\n  'Porsche',\n  'Range Rover',\n  'Rolls-Royce',\n  'Volkswagen',\n];\n\n","import React from 'react';\nimport { useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { brands } from './сhooseModel';\nimport { TfiAngleDoubleDown, TfiAngleDoubleUp } from 'react-icons/tfi';\n\nconst Filter = ({\n  cars,\n  isFiltered,\n  inFilter,\n  changeIsFiltered,\n  filter = {},\n  changeFilter,\n}) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [, setSearchParams] = useSearchParams();\n\n  const dispatch = useDispatch();\n\n  const isFilterEmpty = useCallback(() => {\n    for (const key in filter) {\n      if (filter.hasOwnProperty(key) && filter[key]) {\n        return false;\n      }\n    }\n    return true;\n  }, [filter]);\n\n  useEffect(() => {\n    if (isFilterEmpty()) {\n      setSearchParams({});\n    } else {\n      setSearchParams({ ...filter });\n    }\n  }, [filter, isFilterEmpty, setSearchParams]);\n\n  const switchDropdown = dropdownType => {\n    if (isDropdownOpen === dropdownType) {\n      setIsDropdownOpen(null);\n    } else {\n      setIsDropdownOpen(dropdownType);\n    }\n  };\n\n  const filterCars = (car, filter) => {\n    console.log('Filtering car:', car, 'with filter:', filter);\n    if (!car) {\n      return false;\n    }\n\n    if (filter && filter.brand !== undefined) {\n      return !filter.brand || car.brand === filter.brand;\n    }\n    return true;\n  };\n\n  const resetHandle = () => {\n    setSelectedBrand('');\n    dispatch(changeFilter({ ...filter, brand: '' }));\n    dispatch(changeIsFiltered(false));\n  };\n\n  const searchHandle = () => {\n    console.log('All cars:', cars);\n    const filteredCars = cars.filter(car => filterCars(car, filter));\n    console.log('filteredCars:', filteredCars);\n    inFilter(filteredCars);\n    dispatch(changeIsFiltered(true));\n  };\n\n  const [selectedBrand, setSelectedBrand] = useState('');\n\n  const selectHandle = selectedBrand => {\n    changeFilter({ brand: selectedBrand });\n    setIsDropdownOpen(false);\n    setSelectedBrand(selectedBrand);\n  };\n\n  return (\n    <section>\n      <div>\n        <div>\n          <label htmlFor=\"modelTitle\">Brands</label>\n          <input\n            id=\"modelTitle\"\n            readOnly\n            placeholder=\"Choose brand\"\n            value={selectedBrand}\n          />\n        </div>\n        <button type=\"button\" onClick={() => switchDropdown('brand')}>\n          {isDropdownOpen === 'brand' ? (\n            <TfiAngleDoubleUp />\n          ) : (\n            <TfiAngleDoubleDown />\n          )}\n        </button>\n        {isDropdownOpen === 'brand' && (\n          <div>\n            <ul>\n              {brands.map((option, index) => (\n                <li\n                  key={index}\n                  className={filter && filter.brand === option ? 'active' : ''}\n                  onClick={() => selectHandle(option)}\n                >\n                  {option}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <button type=\"button\" onClick={searchHandle}>\n          Search\n        </button>\n        {isFiltered && (\n          <button type=\"button\" onClick={resetHandle}>\n            Reset\n          </button>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Container } from 'common/Container.styled';\nimport CarList from 'components/CarList/CarList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllCars } from 'redux/carSlice/carsThunk';\nimport {\n  selectCars,\n  selectFilteredCars,\n  selectFilters,\n  selectIsFiltered,\n  selectIsLoading,\n} from 'redux/carSlice/selectors';\n\nimport {\n  setFilter,\n  setFilteredCars,\n  setIsCarsFiltered,\n} from 'redux/carSlice/slice';\nimport Filter from 'components/Filter/Filter';\n\nfunction CatalogBody() {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n  const filter = useSelector(selectFilters);\n  const filteredCars = useSelector(selectFilteredCars);\n  const isLoading = useSelector(selectIsLoading);\n  const isFiltered = useSelector(selectIsFiltered);\n\n  useEffect(() => {\n    dispatch(fetchAllCars());\n  }, [dispatch]);\n\n  console.log('Parent component filter:', filter);\n\n  return (\n    <section>\n      <Container>\n        <Filter\n          cars={cars}\n          filter={filter}\n          isFiltered={isFiltered}\n          inFilter={value => dispatch(setFilteredCars(value))}\n          changeIsFiltered={value => dispatch(setIsCarsFiltered(value))}\n          changeFilter={value => dispatch(setFilter(value))}\n        />\n        {isLoading ? (\n          <span>Loading...</span>\n        ) : (\n          <CarList cars={isFiltered ? filteredCars : cars} />\n        )}\n        {isFiltered && !filteredCars.length && <span>Not found</span>}\n      </Container>\n    </section>\n  );\n}\nexport default CatalogBody;\n","import React from 'react';\nimport CatalogBody from 'components/CatalogBody/CatalogBody';\n\nfunction CatalogPage() {\n  return <CatalogBody />;\n}\n\nexport default CatalogPage;\n"],"names":["_ref","car","id","img","brand","model","year","features","description","price","_jsxs","children","_jsx","src","alt","concat","cars","map","CarItem","selectCars","state","selectFilteredCars","filteredCars","selectFilters","filter","selectIsLoading","isLoading","selectIsFiltered","isFiltered","brands","inFilter","changeIsFiltered","_ref$filter","changeFilter","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","_useSearchParams","useSearchParams","setSearchParams","dispatch","useDispatch","isFilterEmpty","useCallback","key","hasOwnProperty","useEffect","_objectSpread","_useState3","_useState4","selectedBrand","setSelectedBrand","htmlFor","readOnly","placeholder","value","type","onClick","dropdownType","TfiAngleDoubleUp","TfiAngleDoubleDown","option","index","className","selectHandle","console","log","undefined","filterCars","useSelector","fetchAllCars","Container","Filter","setFilteredCars","setIsCarsFiltered","setFilter","CarList","length","CatalogBody"],"sourceRoot":""}